{"version":3,"sources":["components/СontactForm/СontactForm.styled.jsx","components/СontactForm/СontactForm.jsx","components/СontactElement/ContactElement.styled.jsx","components/СontactElement/СontactElement.jsx","components/СontactList/СontactList.styled.jsx","components/СontactList/СontactList.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/App.styled.jsx","components/App.jsx","index.js"],"names":["Form","styled","form","Input","input","Button","button","ContactForm","state","name","number","handleContact","e","console","log","currentTarget","value","setState","handleSubmitContact","preventDefault","props","onSubmit","reset","this","htmlFor","onChange","type","pattern","title","required","Component","Item","li","ContactElement","id","onClick","List","ul","ContactList","contacts","onDeleteContact","map","contact","Label","label","Filter","PhonebookTitle","h1","ContactTitle","h2","App","filter","formSubmitHandler","newContact","uuidv4","some","alert","changeFilter","getVisibleContacts","normalizedFilter","toLowerCase","includes","deleteContact","contactId","prevState","json","localStorage","getItem","JSON","parse","stringify","setItem","visibleContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3a8a6b04.chunk.js","sourcesContent":["import styled from '@emotion/styled';\n\nexport const Form = styled.form`\n  // display: block;\n  margin-left: 20px;\n`;\n\nexport const Input = styled.input`\n  display: block;\n  margin-top: 10px;\n  margin-bottom: 10px;\n`;\n\nexport const Button = styled.button`\n  background-color: #34b4eb;\n  border-color: #34b4eb;\n  border-radius: 4px;\n`;\n","import { Component } from 'react';\nimport { Form, Input, Button } from './СontactForm.styled';\n\nexport class ContactForm extends Component {\n  state = {\n    name: '',\n    number: '',\n  };\n\n  handleContact = e => {\n    console.log(e.currentTarget);\n    console.log(e.currentTarget.name);\n    console.log(e.currentTarget.value);\n\n    const { name, value } = e.currentTarget;\n    this.setState({ [name]: value });\n  };\n\n  handleSubmitContact = e => {\n    e.preventDefault();\n    //   console.log(this.state);\n    this.props.onSubmit(this.state);\n    this.reset();\n  };\n\n  reset = () => {\n    this.setState({ name: '', number: '' });\n  };\n\n  render() {\n    const { name, number } = this.state;\n\n    return (\n      <Form onSubmit={this.handleSubmitContact}>\n        <label htmlFor=\"name\">\n          Name\n          <Input\n            value={name}\n            onChange={this.handleContact}\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов.\n             Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n          />\n        </label>\n        <label htmlFor=\"number\">\n          Number\n          <Input\n            value={number}\n            onChange={this.handleContact}\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы,\n             тире, круглые скобки и может начинаться с +\"\n            required\n          />\n        </label>\n        <div>\n          <Button type=\"submit\">Add contact</Button>\n        </div>\n      </Form>\n    );\n  }\n}\n","import styled from '@emotion/styled';\n\nexport const Item = styled.li`\n  display: flex;\n  justify-content: space-between;\n  width: 300px;\n  margin: 4px;\n`;\n\nexport const Button = styled.button`\n  background-color: #34b4eb;\n  border-color: #34b4eb;\n  border-radius: 4px;\n`;\n","import PropTypes from 'prop-types';\nimport { Item, Button } from './ContactElement.styled';\n\nexport const ContactElement = ({ id, name, number, onClick }) => {\n  return (\n    <Item key={id}>\n      <span>\n        {name}: {number}\n      </span>\n      <Button type=\"button\" onClick={onClick}>\n        Delete\n      </Button>\n    </Item>\n  );\n};\n\nContactElement.propTypes = {\n  id: PropTypes.string,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  onClick: PropTypes.func.isRequired,\n};\n","import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n\n  padding-left: 20px;\n`;\n","import PropTypes from 'prop-types';\nimport { ContactElement } from 'components/СontactElement/СontactElement';\nimport { List } from './СontactList.styled';\n\nexport const ContactList = ({ contacts, onDeleteContact }) => {\n  return (\n    <List>\n      {contacts.map(contact => (\n        <ContactElement\n          name={contact.name}\n          number={contact.number}\n          onClick={() => onDeleteContact(contact.id)}\n        />\n      ))}\n    </List>\n  );\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.exact({\n      id: PropTypes.string,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }).isRequired,\n  ),\n  onDeleteContact: PropTypes.func.isRequired,\n};\n","import styled from '@emotion/styled';\n\nexport const Label = styled.label`\n  display: block;\n  margin-left: 20px;\n`;\n","import PropTypes from 'prop-types';\nimport { Label } from './Filter.styled';\n\nexport const Filter = ({ value, onChange }) => {\n  return (\n    <Label>\n      <p> Find contact by name</p>\n      <input type=\"text\" value={value} onChange={onChange} />\n    </Label>\n  );\n};\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n","import styled from '@emotion/styled';\n\nexport const PhonebookTitle = styled.h1`\n  margin-left: 20px;\n`;\n\nexport const ContactTitle = styled.h2`\n  margin-left: 20px;\n`;\n","import { Component } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport { ContactForm } from './СontactForm/СontactForm';\nimport { ContactList } from './СontactList/СontactList';\nimport { Filter } from './Filter/Filter';\nimport { PhonebookTitle, ContactTitle } from './App.styled';\n\nexport class App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n  };\n\n  componentDidMount() {\n    const json = localStorage.getItem('contacts');\n    const contacts = JSON.parse(json);\n    if (contacts) {\n      this.setState(() => ({ contacts }));\n    }\n  }\n  componentDidUpdate() {\n    const json = JSON.stringify(this.state.contacts);\n    localStorage.setItem('contacts', json);\n  }\n\n  formSubmitHandler = ({ name, number }) => {\n    const { contacts } = this.state;\n    const newContact = {\n      id: uuidv4(),\n      name,\n      number,\n    };\n\n    contacts.some(contact => contact.name === newContact.name)\n      ? alert(`${newContact.name} is already in contacts`)\n      : this.setState(({ contacts }) => ({\n          contacts: [newContact, ...contacts],\n        }));\n  };\n\n  changeFilter = e => {\n    this.setState({ filter: e.currentTarget.value });\n    console.log(e.currentTarget.value);\n  };\n\n  getVisibleContacts = () => {\n    const { contacts, filter } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter(contact => contact.name.toLowerCase().includes(normalizedFilter));\n  };\n\n  deleteContact = contactId => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId),\n    }));\n  };\n\n  render() {\n    const { filter } = this.state;\n\n    const visibleContacts = this.getVisibleContacts();\n\n    return (\n      <div>\n        <PhonebookTitle>Phonebook</PhonebookTitle>\n        <ContactForm onSubmit={this.formSubmitHandler} />\n        <ContactTitle>Contacts</ContactTitle>\n        <Filter value={filter} onChange={this.changeFilter} />\n        <ContactList contacts={visibleContacts} onDeleteContact={this.deleteContact} />\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { App } from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}